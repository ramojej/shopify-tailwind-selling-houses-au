
{% assign slideIndex = 0 %}
<div class="custom-hero twcss-relative twcss-overflow-hidden page-width twcss-pt-[175px]">
  <div class="custom-slider">
    <span class="twcss-block twcss-uppercase twcss-text-black twcss-text-[11px] twcss-tracking-[1.1px]">As seen on foxtel network</span>
    <h1>{{ section.settings.hero_text }}</h1>
    <div class="slider-container">
      {% for block in section.blocks %}
        {% assign product = all_products[block.settings.product] %}
        {% assign first_tag = product.tags | first %}
        <div class="slide">
          {% assign product = all_products[block.settings.product] %}
          
          <img src="{{ product.featured_image.src | img_url: '300x' }}" width="{{ product.featured_image.width }}" height="{{ product.featured_image.height }}"alt="{{ product.featured_image.alt }}" class="product-image">
          <a href="{{ product.url }}" class="product-link">View Product</a>
          <p class="product-price">{{ product.price | money }}</p>
          
          <p>{{ product.description }}</p>
          <p>Price: {{ product.price | money }}</p>
          <div class="product-info">
            <span>{{ first_tag }}</span>
            <h2>{{ product.title }}</h2>
          </div>
          
        </div>
        {% assign slideIndex = slideIndex | plus: 1 %}
      {% endfor %}
      
    </div>
    <a href="{{ section.settings.explore_products_link }}" class="explore-link">Explore <br /> products {% render 'icon-arrow-right' %}</a>
    <div class="slide-number"></div>
    <button class="prev-button">&laquo;</button>
    <button class="next-button">&raquo;</button>
    <nav class="slider-nav">
      {% for block in section.blocks %}
        <button class="nav-button" data-index="{{ forloop.index0 }}"></button>
      {% endfor %}
    </nav>

    
  </div>
  {% render 'icon-circles-mobiles' %}
  </div>


  <style>
    .custom-slider {
      position: relative;
      max-width: 800px;
      margin: 0 auto;
      z-index: 2;
    }
  
    .slider-container {
      display: flex;
      overflow: hidden;
    }
  
    .slide {
      flex-shrink: 0;
      width: 100%;
      transition: transform 0.5s ease-in-out;
    }
  
    .slide img {
      width: 100%;
      max-width: 320px
    }
  
    .prev-button,
    .next-button {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      background-color: rgba(255, 255, 255, 0.7);
      border: none;
      font-size: 2rem;
      padding: 10px;
      cursor: pointer;
      outline: none;
      z-index: 1;
    }
  
    .prev-button {
      left: 10px;
    }
  
    .next-button {
      right: 10px;
    }
  
    .slider-nav {
      display: none;
      justify-content: center;
      align-items: center;
      margin-top: 15px;
    }
  
    .nav-button {
      width: 10px;
      height: 10px;
      background-color: #ccc;
      border: none;
      border-radius: 50%;
      margin: 0 5px;
      outline: none;
      cursor: pointer;
    }
  
    .nav-button.active {
      background-color: #333;
    }

    .custom-slider h1 {
      font-size: 50px;
      text-transform: uppercase;
      letter-spacing: 0.275px;
      line-height: 40px;
      margin-top: 15px;
    }

    .icon-circles-mobiles {
      position: absolute;
      top: 0;
      right: 0;
      z-index: 1;
    }

    .explore-link {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 150px;
      height: 150px;
      background-color: var(--teal);
      border-radius: 50%;
      cursor: pointer;
      position: relative;
      overflow: hidden;
      color: #fff;
      font-size: 12px;
      text-transform: uppercase;
      letter-spacing: 1.1px;
      text-align: center;
      flex-direction: column;
      position: absolute;
      right: -20px;
      z-index: 3;
      bottom: 135px;
    }

    .explore-link svg {
      transition: all 0.3s ease;
      margin-top: 10px
    }

    .explore-link:hover svg {
      margin-left: 10px
    }

    .explore-link:hover:before {
      animation: backgroundChange 1s forwards;
    }

    .explore-link::before {
      content: '';
      position: absolute;
      width: 10px;
      height: 10px;
      background-color: black;
      border-radius: 50%;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      opacity: 0;
      transition: all 0.3s ease;
    }

    .explore-link:hover::before {
      transform: scale(20);
      opacity: 1;
      z-index: -1;
    }
  </style>

{% javascript %}
  document.addEventListener('DOMContentLoaded', function () {
  const sliderElement = document.querySelector('.custom-slider');
  const slides = sliderElement.querySelectorAll('.slide');
  const prevButton = sliderElement.querySelector('.prev-button');
  const nextButton = sliderElement.querySelector('.next-button');

  const slider = {
    slides: slides,
    currentIndex: 0,
  };

  updateSlideNumber(slider); 

  function updateSlider(slider) {
    slider.slides.forEach((slide, index) => {
      slide.style.transform = `translateX(-${slider.currentIndex * 100}%)`;
    });

    navButtons.forEach((navButton) => {
      navButton.classList.remove('active');
    });
    navButtons[slider.currentIndex].classList.add('active');
  }

  function updateSlideNumber(slider) {
    const slideNumberElement = sliderElement.querySelector('.slide-number');
    const currentSlide = slider.currentIndex + 1;
    const totalSlides = slider.slides.length;

    const formattedCurrentSlide = currentSlide < 10 ? `0${currentSlide}` : currentSlide;
    const formattedTotalSlides = totalSlides < 10 ? `0${totalSlides}` : totalSlides;

    slideNumberElement.textContent = `${formattedCurrentSlide}/${formattedTotalSlides}`;
  }

  function changeSlide(slider, change) {
    slider.currentIndex += change;

    if (slider.currentIndex < 0) {
      slider.currentIndex = slider.slides.length - 1;
    } else if (slider.currentIndex >= slider.slides.length) {
      slider.currentIndex = 0;
    }

    updateSlider(slider);
    updateSlideNumber(slider); 
  }

  function navigateToSlide(slider, index) {
    slider.currentIndex = index;
    updateSlider(slider);
  }

  prevButton.addEventListener('click', function () {
    changeSlide(slider, -1);
  });

  nextButton.addEventListener('click', function () {
    changeSlide(slider, 1);
  });

  const navButtons = sliderElement.querySelectorAll('.nav-button');
  navButtons.forEach((navButton, index) => {
    navButton.addEventListener('click', function () {
      navigateToSlide(slider, index);
    });
  });

  navButtons[0].classList.add('active');

  // Draggable functionality
  let pointerStartX = null;

  function handlePointerDown(event) {
    pointerStartX = event.clientX || event.touches[0].clientX;
  }

  function handlePointerUp(event) {
    const pointerEndX = event.clientX || event.changedTouches[0].clientX;

    if (pointerStartX && Math.abs(pointerStartX - pointerEndX) > 50) {
      if (pointerStartX > pointerEndX) {
        changeSlide(slider, 1);
      } else {
        changeSlide(slider, -1);
      }
    }

    pointerStartX = null;
  }

  sliderElement.addEventListener('mousedown', handlePointerDown);
  sliderElement.addEventListener('mouseup', handlePointerUp);
  sliderElement.addEventListener('touchstart', handlePointerDown);
  sliderElement.addEventListener('touchend', handlePointerUp);
});

{% endjavascript %}
{% schema %}
{
  "name": "Custom Slider",
  "tag": "section",
  "settings": [
    {
      "type": "url",
      "id": "explore_products_link",
      "label": "Explore Products Link"
    },
    {
      "type": "text",
      "id": "hero_text",
      "label": "Hero Text",
      "default": "Make your space look amazing"
    }
  ],
  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "settings": [
        {
          "type": "text",
          "id": "as_seen",
          "label": "Episode Number"
        },
        {
          "type": "product",
          "id": "product",
          "label": "Select Product"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Custom Slider",
      "category": "Custom",
      "blocks": [
        {
          "type": "slide"
        }
      ]
    }
  ]
}
{% endschema %}